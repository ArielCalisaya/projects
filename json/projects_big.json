[
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/career-support\/sep1-experience-and-education\/",
        "markdown": "## Experience & Education\n\nHave you ever written a story about yourself? Well, this may be the first time! You'll write the story of your professional history.\n\nWe want you to start by telling us about your education and work experience. But don't start just yet, there's a right way to do it :) Keep reading and we'll tell you how it's done.\n\n### Instructions\n\n 1. Carefully read the following content.\n 2. You will be doing your second pull request! Please look for the [About 4Geeks Academy](https:\/\/github.com\/4GeeksAcademy\/About-4Geeks-Academy) again.\n 3. Find your corresponding student `.YML` file.\n 4. Update the section about your relevant work experience & education following the indications provided in the rest of this document.\n \n ## How to write your experience and education?\n\n### Work Experience\n\nYour **work history** is the most important component of your resume. Employers will want know where you have worked, when you worked there, and what responsibilities you held in each role you have had. They will be looking to see how your experience lines up with what they are looking for in prospective employees.\n\n - List the jobs and internships you have held in reverse chronological order, with the most recent positions first.\n - For each position, include: job title, company, location, dates of employment, and a bulleted list of the strongest accomplishments for each job.\n - Verb tense should be present tense for your current job if you are employed, and past tense for prior employment.\n\n#### Things to remember:\n - *Most recent experience first:* Reverse chronological order.\n - *Basic structure:* Company name, position title, date, city\/state.\n - *Bullets:*\n\t - *Active voice:* Start each with an action word.\n\t - *Quantify:* Quantify results and scope of your work.\n\t - *Skills:* Specific  skills  used  to  achieve  that  result\n\t - *Order:* Stronger bullets at the top\n\n### Education\nThe **education section** generally comes next. You need only to list degrees earned, with the highest first, when you have been out of school for a few years.\n\nIf you\u2019re a student or recent graduate, the education section of your resume can be listed above your employment history. If you have work experience, list it below that section. Education should be listed in reverse chronological order, with the most recent and advanced education first. Include the name of the school, the degree earned, and the date you graduated.\n\nWhether you include your GPA on your resume depends on how long ago you graduated and how high your GPA is.\n\n#### Things to remember:\n - *Higher education:* Major, Minor, Institution, graduation date.\n - *Recent graduates:* Include GPA if it\u2019s a 3.0+ and relevant  coursework.\n - *Bootcamps & Courses:* Include course\/bootcamp name, Institution name, and dates.\n - *Page Positioning:* Experience is always first, unless you\u2019re a recent graduate.\n\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbMjgwMTc4MTc2LDQxNTQwODEzOSwxMjEzOT\nA5NDAwXX0=\n-->",
        "markdown-es": "## Experiencia y Educaci\u00f3n\n\u00bfAlguna vez has escrito una historia sobre ti? Bueno, esta puede ser la primera vez! Escribir\u00e1s la historia de tu historia profesional.\n\nQueremos que comience por contarnos sobre su educaci\u00f3n y experiencia laboral. Pero no empieces todav\u00eda, hay una forma correcta de hacerlo :) Sigue leyendo y te diremos c\u00f3mo se hace.\n\n### Instruciones\n 1. Lea atentamente el siguiente contenido.\n 2. Estar\u00e1s haciendo tu segund pull request! Por favor busque el [repositorio de perfil externo del estudiante](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) otra vez.\n 3. Encuentra el archivo `.YML` correspondiente a su estudiante dentro de la carpeta` src \/ students \/ `.\n 4. Actualiza la secci\u00f3n sobre su experiencia laboral relevante y educaci\u00f3n siguiendo las indicaciones proporcionadas en el resto de este documento.\n \n ## \u00bfC\u00f3mo escribir tu experiencia y educaci\u00f3n?\n\n### Experiencia laboral\nTu ** historial de trabajo ** es el componente m\u00e1s importante de tu curr\u00edculum. Los empleadores querr\u00e1n saber d\u00f3nde has trabajado, cu\u00e1ndo trabajaste all\u00ed y qu\u00e9 responsabilidades tuviste en cada funci\u00f3n que has tenido. Buscar\u00e1n ver c\u00f3mo se alinea tu experiencia con lo que buscan en los posibles empleados.\n\n - Enumera los trabajos y las pasant\u00edas que has desempe\u00f1ado en orden cronol\u00f3gico inverso, con las posiciones m\u00e1s recientes en primer lugar.\n - Para cada puesto, incluya: t\u00edtulo del trabajo, compa\u00f1\u00eda, ubicaci\u00f3n, fechas de empleo y una lista con vi\u00f1etas de los logros m\u00e1s s\u00f3lidos para cada trabajo.\n - El tiempo verbal debe estar en tiempo presente para su trabajo actual si est\u00e1 empleado, y el tiempo pasado para el empleo anterior.\n\n#### Cosas para recordar:\n - *Experiencia m\u00e1s reciente primero:* Orden cronol\u00f3gico inverso.\n - *Estructura b\u00e1sica:* Nombre de la empresa, t\u00edtulo de la posici\u00f3n, fecha, ciudad \/ estado.\n - *Bullets:*\n\t - *Voz activa:* Comience cada una con una palabra de acci\u00f3n.\n\t - *Cuantifique:* Cuantifique los resultados y el alcance de su trabajo.\n\t - *Habilidades:* Habilidades espec\u00edficas utilizadas para lograr ese resultado\n\t - *Orden:* Balas m\u00e1s fuertes en la parte superior.\n\n### Educaci\u00f3n\nLa **secci\u00f3n de educaci\u00f3n** generalmente viene despu\u00e9s. Solo necesita enumerar los t\u00edtulos obtenidos, primero con los m\u00e1s altos, cuando ha estado fuera de la escuela durante algunos a\u00f1os.\n\nSi eres un estudiante o reci\u00e9n graduado, la secci\u00f3n de educaci\u00f3n de tu curr\u00edculum puede aparecer arriba de tu historial de empleo. Si tienes experiencia laboral, an\u00f3tela debajo de esa secci\u00f3n. La educaci\u00f3n debe aparecer en orden cronol\u00f3gico inverso, con la educaci\u00f3n m\u00e1s reciente y avanzada en primer lugar. Incluye el nombre de la escuela, el grado obtenido y la fecha en que se gradu\u00f3.\n\nSi incluyes tu GPA en su curr\u00edculum vitae, depende de cu\u00e1nto tiempo hace que te graduaste y qu\u00e9 tan alto es su GPA.\n\n#### Cosas para recordar:\n - *Educaci\u00f3n superior:* Mayor, Menor, Instituci\u00f3n, fecha de graduaci\u00f3n.\n - *Graduados recientes:* Incluya GPA si es un trabajo de 3.0+ y relevante.\n - *Campos de entrenamiento y cursos:* Incluya el nombre del curso \/ campo de entrenamiento, el nombre de la instituci\u00f3n y las fechas.\n - *Posicionamiento de p\u00e1ginas:* La experiencia siempre es lo primero, a menos que seas un reci\u00e9n graduado.\n\n\n> Escrito con [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbMjgwMTc4MTc2LDQxNTQwODEzOSwxMjEzOT\nA5NDAwXX0=\n-->",
        "status": "published",
        "visibility": "internal",
        "title": "Update your Career Experiences and Education",
        "slug": "sep1-experience-and-education",
        "duration": 3,
        "description": "Update the experience and education on your student profile",
        "talents": [
            {
                "badge": "fully-committed",
                "points": 5
            },
            {
                "badge": "git-brancher",
                "points": 5
            },
            {
                "badge": "git-creator",
                "points": 5
            }
        ],
        "info-path": "..\/p\/career-support\/sep1-experience-and-education\/info.json",
        "name": "p",
        "url": "..\/p\/career-support\/sep1-experience-and-education\/",
        "technology": "career-support",
        "difficulty": null,
        "category": "career-support",
        "folder-name": "sep1-experience-and-education"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/career-support\/sep2-projects\/",
        "markdown": "## Projects\nNow, this is where you're going to tell us how an AWESOME developer you are. We know you're an awesome developer, we already know you, and in this section we want you to show it to everyone else :).\n\n### Instructions\n 1. Carefully read the following content.\n 2.  You will be doing your third pull request! Please look for the [Student Exernal Profile repository](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) again.\n 3. Find your corresponding student `.YML` file inside the `src\/students\/` folder.\n 4. Update the section about your relevant projects following the indications provided in the rest of this document.\n\n### Projects Section\nThe **projects** section is instrumental in demonstrating your technical expertise in real world settings.\n\nStrategically **select two to three projects** that you are particularly proud of and demonstrate the breadth of your technical expertise or highlight different skills and competencies.\n\nMake sure to **include working links to GitHub** to all your project's live demos and that the code is accessible for potential review, the code must have a README.md file with ~500 words about the project: What it does, technologies used and interesting challenges you had to overcome when developing it. And lastly, it is recommended to add a small animated GIF demonstration like this one:\n<p align=\"center\">\n<img src=\"https:\/\/ucarecdn.com\/c16892ee-ef76-4733-9448-9360a845ea73\/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4644745a675239795a4a564d4f784a5443542f67697068792e676966.gif\" height=\"250\"  \/>\n<\/p>\nMake it shine!\n\nDescribing projects as part of your professional trajectory offers several distinct advantages:\n-   It establishes you as a experienced professional in your field.  \n-   It demonstrates a proven track record of success.  \n-   It allows potential employers to mentally insert you into a position that requires a similar skill set.\n-   It demonstrates leadership skills and initiative. \n\n### Things to remember:\n - Focus on a few unique or interesting projects that demonstrate mastery of critical skills.\n - Linking your projects to your website or GitHub repository may encourage curious reviewers to dig deeper.\n\n### How to list a project:\n[Name of the project]: [short description of the project]\n\n*Example:*\n**Project: Agricultural Corpus**: [github.com\/jodth07\/mscottee](github.com\/jodth07\/mscotee)\nCreated a searchable database of agricultural documents using Django with MySQL database. Also used Python to clean up the data prior to adding the to the database. The search results provided paginated context text before and after the searched text.\n\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTEwOTQ0MjA0ODQsLTE1MzUwODMxNzNdfQ\n==\n-->\n",
        "markdown-es": "## Proyectos\nAhora, aqu\u00ed es donde vas a decirnos c\u00f3mo eres un desarrollador IMPRESIONANTE. Sabemos que eres un desarrollador incre\u00edble, ya te conocemos y en esta secci\u00f3n queremos que lo muestres a todos los dem\u00e1s :).\n\n### Instruciones\n 1. Lea atentamente el siguiente contenido.\n 2. Estar\u00e1s haciendo tu tercer pull request! Por favor busque el [repositorio de perfil externo del estudiante](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) again.\n 3. Encuentre el archivo `.YML` correspondiente a su estudiante dentro de la carpeta `src \/ students \/`.\n 4. Actualiza la secci\u00f3n sobre tus proyectos relevantes siguiendo las indicaciones proporcionadas en el resto de este documento.\n\n### Secci\u00f3n de Proyectos\nLa secci\u00f3n **proyectos** es fundamental para demostrar su experiencia t\u00e9cnica en entornos reales.\n\nEstrat\u00e9gicamente **seleccione dos o tres proyectos** de los que est\u00e9s particularmente orgulloso y demuestre la amplitud de su experiencia t\u00e9cnica o resalte diferentes habilidades y competencias.\n\nAseg\u00farate de incluir **enlaces de trabajo a GitHub** a todas las demostraciones en vivo de tu proyecto y que el c\u00f3digo sea accesible para una posible revisi\u00f3n, el c\u00f3digo debe tener un archivo README.md con ~ 500 palabras sobre el proyecto: Qu\u00e9 hace, tecnolog\u00edas Desaf\u00edos usados e interesantes que tuvo que superar al desarrollarlo. Y por \u00faltimo, se recomienda agregar una peque\u00f1a demostraci\u00f3n GIF animada como esta:\n<p align=\"center\">\n<img src=\"https:\/\/ucarecdn.com\/c16892ee-ef76-4733-9448-9360a845ea73\/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4644745a675239795a4a564d4f784a5443542f67697068792e676966.gif\" height=\"250\"  \/>\n<\/p>\nHazlo brillar!\n\nLa descripci\u00f3n de proyectos como parte de tu trayectoria profesional ofrece varias ventajas distintivas:\n-   Te establece como un profesional experimentado en tu campo.\n-   Demuestra un historial probado de \u00e9xito.\n-   Permite que los posibles empleadores te inserten mentalmente en una posici\u00f3n que requiere un conjunto de habilidades similar.\n-   Demuestra habilidades de liderazgo e iniciativa.\n\n### Cosas para recordar:\n - Enf\u00f3cate en algunos proyectos \u00fanicos o interesantes que demuestren dominio de habilidades cr\u00edticas.\n - Vincular tus proyectos a tu sitio web o al repositorio de GitHub puede animar a los revisores curiosos a profundizar.\n\n### C\u00f3mo listar un proyecto:\n[Name of the project]: [short description of the project]\n\n*Ejemplo:*\n**Proyecto: Agricultural Corpus**: [github.com\/jodth07\/mscottee](github.com\/jodth07\/mscotee)\nCrea una base de datos de b\u00fasqueda de documentos agr\u00edcolas usando Django con la base de datos MySQL. Tambi\u00e9n us\u00f3 Python para limpiar los datos antes de agregarlos a la base de datos. Los resultados de la b\u00fasqueda proporcionaron texto de contexto paginado antes y despu\u00e9s del texto buscado.\n\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTEwOTQ0MjA0ODQsLTE1MzUwODMxNzNdfQ\n==\n-->\n",
        "status": "published",
        "visibility": "internal",
        "title": "Update your project portfolio",
        "slug": "sep2-projects",
        "duration": 3,
        "description": "Update your project experience on your Student Profile",
        "talents": [
            {
                "badge": "fully-committed",
                "points": 5
            },
            {
                "badge": "git-brancher",
                "points": 5
            },
            {
                "badge": "git-creator",
                "points": 5
            }
        ],
        "info-path": "..\/p\/career-support\/sep2-projects\/info.json",
        "name": "p",
        "url": "..\/p\/career-support\/sep2-projects\/",
        "technology": "career-support",
        "difficulty": null,
        "category": "career-support",
        "folder-name": "sep2-projects"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/career-support\/sep3-skills\/",
        "markdown": "## Skills\nDo you know what you're good at? No, video games is not a technical skill, neither is watching sports or fashion blogging ;) Although you could include them as personal fun facts in your Summary, what we're looking for here are the skills relevant to what you want to do pro-fe-ssio-na-lly.\n\n### Instructions\n 1. Carefully read the following content.\n 2.  You will be doing your fourth pull request! Please look for the [Student Exernal Profile repository](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) again.\n 3. Find your corresponding student `.YML` file inside the `src\/students\/` folder.\n 4. Update the section about your relevant soft, hard & technical skills following the indications provided in the rest of this document.\n \n### Resources\nThe Red Bull Wingfinder: Strengths & Personality Online Test, may be useful to help you identify your strengths and soft skills: \nhttps:\/\/www.wingfinder.com\/\n\n### Skills Section\nThe **skills** section of your resume is a place where you can show your strengths and individuality. Tailor your skills section\nto the kind of job you'd like to apply, including skills that are explicitly mentioned in job postings or known to be valued at the organizations.\n\nDon't hesitate to add skills that may be nontechnical from previous positions you may have held, as they are still valued by employers and are worth emphasizing. Of particular note for development is management, communications, marketing and design skills which are all complementary in typical day to day responsibilities.\n\n - List skills that are most relevant to the job you seek. Think about what the employer is looking for in relation to what you've done and who you are as a person.\n - Don't forget to list very advanced computer programs (only graphic design programs if you're interested in front-end programming) or technologies you've had experience with; proficiency can be seen as added value.\n\n### Skills examples:\n**Front End**\nHTML5\nCSS3\nJavascript\nReact.js\nAngular\n\n**Databases\/Data Management**\nSQL\/MySQL\/SQL Server\nMongoDB\nPostgres\nNatural Language Processing\n\n**Backend and Server Side**\nNodeJS\nPython\nDjango\nRest API\nAJAX\nPHP\nSwagger Documentation\n\n**Other Computer Skills**\nGithub\nPostman\nProficient in Photoshop & Illustrator\nMicrosoft Dynamics\n\n**Languages**\nEnglish\nSpanish\nCantonese\n\n**Soft Skills**\nDetail oriented, creative, proactive, adaptable, organized, Ability to understand business requirements and translate them into technical requirements.\n\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTU4MjU2NzY4M119\n-->",
        "markdown-es": "## Habilidades\n\u00bfSabes en qu\u00e9 eres bueno? No, los videojuegos no son una habilidad t\u00e9cnica, tampoco es mirar deportes o blogs de moda;) Aunque podr\u00edas incluirlos como datos divertidos personales en tu Resumen, lo que buscamos aqu\u00ed son las habilidades relevantes para lo que quieres hacer pro-fe-sio-nal-men-te.\n\n### Instruciones\n 1. Lee atentamente el siguiente contenido.\n 2. Estar\u00e1s haciendo el cuarto pull request! Por favor busque el [repositorio de perfil externo del estudiante](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) again.\n 3. Encuentra el archivo `.YML` correspondiente a tu estudiante dentro de la carpeta `src \/ students \/`.\n 4. Actualice la secci\u00f3n sobre sus habilidades blandas, duras y t\u00e9cnicas relevantes siguiendo las indicaciones proporcionadas en el resto de este documento.\n \n### Recursos\nEl examen en l\u00ednea de Red Bull Wingfinder: fortalezas y personalidad, puede ser \u00fatil para ayudarlo a identificar sus fortalezas y habilidades:\nhttps:\/\/www.wingfinder.com\/\n\n### Secci\u00f3n de Habilidades\nLa secci\u00f3n de **habilidades** de tu curr\u00edculum es un lugar donde puedes mostrar tus fortalezas e individualidad. Adapta tu secci\u00f3n de habilidades\nal tipo de trabajo que te gustar\u00eda presentar, incluidas las habilidades que se mencionan expl\u00edcitamente en las ofertas de trabajo o que se sabe que son valoradas en las organizaciones.\n\nNo dudes en agregar habilidades que pueden no ser t\u00e9cnicas de posiciones anteriores que hayas tenido, ya que a\u00fan son valoradas por los empleadores y vale la pena enfatizarlas. De particular inter\u00e9s para el desarrollo son las habilidades de gesti\u00f3n, comunicaciones, marketing y dise\u00f1o, que son todas complementarias en las responsabilidades t\u00edpicas del d\u00eda a d\u00eda.\n\n - Enumera las habilidades que son m\u00e1s relevantes para el trabajo que busca. Piensa en lo que el empleador est\u00e1 buscando en relaci\u00f3n con lo que has hecho y qui\u00e9n eres t\u00fa como persona.\n - No olvides enumerar programas de computadora muy avanzados (solo programas de dise\u00f1o gr\u00e1fico si est\u00e1 interesado en la programaci\u00f3n de aplicaciones para el usuario) o tecnolog\u00edas con las que haya tenido experiencia; La competencia puede ser vista como un valor agregado.\n\n### Ejemplos de Habilidades:\n**Front End**\nHTML5\nCSS3\nJavascript\nReact.js\nAngular\n\n**Databases\/Data Management**\nSQL\/MySQL\/SQL Server\nMongoDB\nPostgres\nNatural Language Processing\n\n**Backend and Server Side**\nNodeJS\nPython\nDjango\nRest API\nAJAX\nPHP\nSwagger Documentation\n\n**Otras habilidades inform\u00e1ticas**\nGithub\nPostman\nProficient in Photoshop & Illustrator\nMicrosoft Dynamics\n\n**Lenguajes**\nEnglish\nSpanish\nCantonese\n\n**Habilidades blandas**\nOrientado a los detalles, creativo, proactivo, adaptable, organizado, Capacidad para comprender los requisitos empresariales y traducirlos en requisitos t\u00e9cnicos.\n\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTU4MjU2NzY4M119\n-->",
        "status": "published",
        "visibility": "internal",
        "title": "Update your Skills",
        "slug": "sep3-skills",
        "duration": 3,
        "description": "Update the skills on your student profile",
        "talents": [
            {
                "badge": "fully-committed",
                "points": 5
            },
            {
                "badge": "git-brancher",
                "points": 5
            },
            {
                "badge": "git-creator",
                "points": 5
            }
        ],
        "info-path": "..\/p\/career-support\/sep3-skills\/info.json",
        "name": "p",
        "url": "..\/p\/career-support\/sep3-skills\/",
        "technology": "career-support",
        "difficulty": null,
        "category": "career-support",
        "folder-name": "sep3-skills"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/career-support\/sep4-summary-statement\/",
        "markdown": "## Summary Statement\nYou don't have to be Hemingway or Charles Dickens to complete this section, but you'll have to invoke your best writing abilities and each of the nine goddesses, daughters of Zeus and Mnemosyne, who preside over the arts and sciences ^^'.\n\n### Instructions\n 1.  Carefully read the following content.\n 2.  You will be doing your fifth pull request! Please look for the [Student Exernal Profile repository](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) again.\n 3. Find your corresponding student `.YML` file inside the `src\/students\/` folder.\n 4. Read the following information and write down your own, unique and particular, summary statement.\n 5. Make sure to include your newly acquired developer skills, as well as your career focus (web development, software development, backend, frontend, etc.).\n 6.  You may share your statement with our Career Support team to get feedback from them.\n\n### Summary Statement Section\nA **summary statement** is a short paragraph that highlights your professional skills and experience. It gives hiring managers a glimpse into your expertise before diving into your resume. The goal of a summary statement is to demonstrate your unique value through your professional story, your skills, and accomplishments.\n\nAs hiring managers may read through hundreds of resumes in a week, a strong summary statement can be just what you need to stand out from the pack.\n\nIf you have relevant work experience, keep your summary super short. The piece you really want the hiring manager reading is your most recent work experience.\n\nThe summary statement is just a \u201cbridge\u201d to get the hiring manager into your experience.\n\nHowever, if you\u2019re  changing careers or you\u2019re looking for jobs without any work experience, the summary section needs to stand on its own, and should be longer.\n\n### Things to remember:\n\n - This is the opportunity to showcase your strengths in light of the type of job you want to target.\n - Keep your summary short if you have relevant work experience.\n - Make sure to talk about your strenghts, tops skills, and accomplishments.\n\n### Summary Statement Samples\n#### Sample 1\n\"_Experienced Project Manager with vast IT experience. Skills include computer networking, analytical thinking and creative problem solving. Able to apply customer service concepts to IT to improve user experience for clients, employees and administration._\"\n\n#### Sample 2\n\"_Marketing Manager with over eight years of experience. Proven success in running email marketing campaigns and implementing marketing strategies that have pulled in a 20% increase in qualified leads. Proficient in content, social media and inbound marketing strategies. Skilled, creative and innovative._\"\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTEyMzM1Nzc0OTJdfQ==\n-->",
        "markdown-es": "## Resumen de la declaraci\u00f3n\nYou don't have to be Hemingway or Charles Dickens to complete this section, but you'll have to invoke your best writing abilities and each of the nine goddesses, daughters of Zeus and Mnemosyne, who preside over the arts and sciences ^^'.\n\n### Instructions\n 1.  Lee atentamente el siguiente contenido.\n 2. Estar\u00e1s haciendo el quinto pull request! Por favor busque el [repositorio de perfil externo del estudiante](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) again.\n 3. Encuentra el archivo `.YML` correspondiente a tu estudiante dentro de la carpeta `src \/ students \/`.\n 4. Lea la siguiente informaci\u00f3n y escribe tu propio resumen declarado, \u00fanico y particular.\n 5. Aseg\u00farate de incluir tus habilidades de desarrollador reci\u00e9n adquiridas, as\u00ed como tu enfoque profesional (desarrollo web, desarrollo de software, backend, frontend, etc.).\n 6. Puedes compartir tu declaraci\u00f3n con nuestro equipo de apoyo profesional para obtener comentarios de ellos.\n\n### Secci\u00f3n de Resumen declarado\nUn **resumen declarado* es un p\u00e1rrafo corto que destaca sus habilidades y experiencia profesional. Le da a los gerentes de contrataci\u00f3n un vistazo a su experiencia antes de sumergirse en su curr\u00edculum. El objetivo de una declaraci\u00f3n resumida es demostrar tu valor \u00fanico a trav\u00e9s de tu historia profesional, tus habilidades y tus logros.\n\nComo los gerentes de contrataci\u00f3n pueden leer cientos de curr\u00edculos en una semana, un resumen declarado s\u00f3lido puede ser justo lo que necesitas para sobresalir del paquete.\n\nSi tienes experiencia laboral relevante, manten tu resumen super corto. La pieza que realmente deseas que lea el gerente de contrataci\u00f3n es tu experiencia laboral m\u00e1s reciente.\n\nEl resumen declarado es solo un \"puente\" para que el gerente de contrataciones obtenga tu experiencia.\n\nSin embargo, si est\u00e1 cambiando de carrera o est\u00e1 buscando trabajo sin ninguna experiencia laboral, la secci\u00f3n de resumen debe sobresalir por s\u00ed sola y debe ser m\u00e1s larga.\n\n### Cosas para recordar:\n\n - Esta es la oportunidad de mostrar tus fortalezas a la luz del tipo de trabajo que desea realizar.\n - Mant\u00e9n tu resumen breve si tiene experiencia laboral relevante.\n - Aseg\u00farate de hablar sobre tus fortalezas, habilidades superiores y logros.\n\n### Pruebas de un Resumen declarado\n#### Prueba 1\n\"_Gestor de proyectos experimentado con amplia experiencia en TI. Las habilidades incluyen redes de computadoras, pensamiento anal\u00edtico y resoluci\u00f3n creativa de problemas. Capaz de aplicar conceptos de servicio al cliente a TI para mejorar la experiencia del usuario para clientes, empleados y administraci\u00f3n._\"\n\n#### Prueba 2\n\"_Gerente de Marketing con m\u00e1s de ocho a\u00f1os de experiencia. \u00c9xito comprobado en la ejecuci\u00f3n de campa\u00f1as de marketing por correo electr\u00f3nico e implementaci\u00f3n de estrategias de marketing que han logrado un aumento del 20% en clientes potenciales calificados Competente en contenido, redes sociales y estrategias de marketing inbound. Especializado, creativo e innovador._\"\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTEyMzM1Nzc0OTJdfQ==\n-->",
        "status": "published",
        "visibility": "internal",
        "title": "Update your Career Summary",
        "slug": "sep4-summary-statement",
        "duration": 3,
        "description": "Update the summary on your student profile",
        "talents": [
            {
                "badge": "fully-committed",
                "points": 5
            },
            {
                "badge": "git-brancher",
                "points": 5
            },
            {
                "badge": "git-creator",
                "points": 5
            }
        ],
        "info-path": "..\/p\/career-support\/sep4-summary-statement\/info.json",
        "name": "p",
        "url": "..\/p\/career-support\/sep4-summary-statement\/",
        "technology": "career-support",
        "difficulty": null,
        "category": "career-support",
        "folder-name": "sep4-summary-statement"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/career-support\/sep5-resume\/",
        "markdown": "## Resume\nTo this part of the project we like to call \"Inception\", not only because you're probably gonna have nightmares about this, but also because it's about building a profile inside your profile :D. It's something like PHP (find out what the first P in PHP stands for), but simpler ^^. And also, this is the *inception* of your job-seeking process, so try to enjoy it with confidence and positivism ;).\n\n### Instructions\n 1. Take all the sections of your Student External Profile (SEP), that you've already worked on, and pour them into a one-page long word document, using this layout: (link a pdf de Resume Guide)\n 2. Save your word document as a pdf and name it \"Resume [Name Last Name]\".\n 3. Add a new section to your SEP called Resume.\n 4.  Carefully read the following content.\n 5. You will be doing your final pull request! Please look for the [Student Exernal Profile repository](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) again.\n 6. Find your corresponding student `.YML` file inside the `src\/students\/` folder.\n 7. Upload your pdf file.\n\n### Resources\nYou can use the following document as formatting guide:\n - [Resume Building Guide](https:\/\/ucarecdn.com\/d189146c-89d2-4dff-9c5a-40b7812e55ab\/ResumeSetupGuide4Geeks.pdf)\n\nUse the following guide to write a Cover Letter in case you need to: \n - [Cover Letter Guide](https:\/\/ucarecdn.com\/b2577c7c-f990-4367-a080-f000777f0bdc\/4GeeksCoverLetterGuide.pdf)\n\n### Resume Section\nIn this section, you will simply need to upload a pdf file with your resume. But first, you have to build your resume. Creating your resume is the first step to getting a job. \n\nYour resume must have the following sections, which you already have completed:\n 1. Contact Information\n 2. Summary Statement\n 3. Skills\n 4. Projects\n 5. Experience & Education\n\nAlso may include:\n - Relevant Courses and Certifications\n - Volunteer Work\n - Awards\n - Personal Interests and Other Activities\n\n### Keywords\nAn important consideration when building your resume is using job-specific keywords. Employers often search resume banks for special words or requirements specific to a job description. Including keywords in the summary, experience, skills and awards sections of your resume will increase your chances of being flagged as a potential match. You should also use such keywords in the title and brief description of yourself that most job sites request.\n\nKeywords tend to be nouns that are industry-specific qualifications, skills or terms. Some keyword examples include degrees or certifications, job titles, computer lingo, industry jargon, product names, company names and professional organizations.\n\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbMzYzNjk5MDQ5XX0=\n-->",
        "markdown-es": "## Resumen\nA esta parte del proyecto nos gusta llamar \"Inception\", no solo porque probablemente vas a tener pesadillas sobre esto, sino tambi\u00e9n porque se trata de crear un perfil dentro de tu perfil: D. Es algo como PHP (descubra lo que significa la primera P en PHP), pero m\u00e1s simple ^^. Y tambi\u00e9n, este es el *inicio* de tu proceso de b\u00fasqueda de empleo, as\u00ed que trata de disfrutarlo con confianza y positivismo;).\n\n### Instruciones\n 1. Toma todas las secciones de tu Perfil externo del estudiante (SEP), en las que ya has trabajado, y conviert\u00e9las en un documento de una sola p\u00e1gina de largo, usando este dise\u00f1o: (enlaza un pdf de la Gu\u00eda del curr\u00edculum)\n 2. Guarda tu documento de Word como pdf y ll\u00e1melo \"Reanudar [Nombre Apellido]\".\n 3. Agrega una nueva secci\u00f3n a tu SEP llamada Reanudar.\n 4. Lea atentamente el siguiente contenido.\n 5. Estar\u00e1s haciendo tu \u00faltimo pull request! Por favor busque el [repositorio de perfil externo del estudiante](https:\/\/github.com\/4GeeksAcademy\/student-external-profile) otra vez.\n 6. Encuentre el archivo `.YML` correspondiente a su estudiante dentro de la carpeta `src \/ students \/`.\n 7. Sube tu archivo pdf.\n\n### Recursos\nPuede utilizar el siguiente documento como gu\u00eda de formato:\n - [Reanudar la gu\u00eda de construcci\u00f3n](https:\/\/ucarecdn.com\/d189146c-89d2-4dff-9c5a-40b7812e55ab\/ResumeSetupGuide4Geeks.pdf)\n\nUse la siguiente gu\u00eda para escribir una carta de presentaci\u00f3n en caso de que necesites:\n - [Gu\u00eda de carta de presentaci\u00f3n](https:\/\/ucarecdn.com\/b2577c7c-f990-4367-a080-f000777f0bdc\/4GeeksCoverLetterGuide.pdf)\n\n### Secci\u00f3n del curriculum vitae\nEn esta secci\u00f3n, simplemente deber\u00e1s cargar un archivo pdf con tu curr\u00edculum. Pero primero, tienes que construir tu curr\u00edculum. Crear tu curr\u00edculum es el primer paso para conseguir un trabajo.\n\nTu curr\u00edculum debe tener las siguientes secciones, que ya has completado:\n 1. Informaci\u00f3n del contacto\n 2. Resumen declarado\n 3. Habilidades\n 4. Proyectos\n 5. Experiencia y Educaci\u00f3n\n\nTambi\u00e9n puedes incluir:\n - Cursos relevantes y certificaciones\n - Trabajo voluntario\n - Premios\n - Intereses personales y otras actividades\n\n### Palabras clave\nUna consideraci\u00f3n importante al crear tu curr\u00edculum es usar palabras clave espec\u00edficas del trabajo. Los empleadores a menudo buscan en los bancos de curr\u00edculos palabras especiales o requisitos espec\u00edficos para una descripci\u00f3n del trabajo. La inclusi\u00f3n de palabras clave en las secciones de resumen, experiencia, habilidades y premios de tu curr\u00edculum aumentar\u00e1 tus posibilidades de ser marcado como una posible coincidencia. Tambi\u00e9n debes usar esas palabras clave en el t\u00edtulo y una breve descripci\u00f3n de ti que la mayor\u00eda de los sitios de trabajo solicitan.\n\nLas palabras clave tienden a ser sustantivos que son calificaciones, habilidades o t\u00e9rminos espec\u00edficos de la industria. Algunos ejemplos de palabras clave incluyen t\u00edtulos o certificaciones, t\u00edtulos de trabajo, jerga inform\u00e1tica, jerga de la industria, nombres de productos, nombres de compa\u00f1\u00edas y organizaciones profesionales.\n\n\n> Written with [StackEdit](https:\/\/stackedit.io\/).\n<!--stackedit_data:\neyJoaXN0b3J5IjpbMzYzNjk5MDQ5XX0=\n-->",
        "status": "published",
        "visibility": "internal",
        "title": "Last update to your Resume",
        "slug": "sep5-resume",
        "duration": 3,
        "description": "Final review to your Student Public Profile",
        "talents": [
            {
                "badge": "fully-committed",
                "points": 5
            },
            {
                "badge": "git-brancher",
                "points": 5
            },
            {
                "badge": "git-creator",
                "points": 5
            }
        ],
        "info-path": "..\/p\/career-support\/sep5-resume\/info.json",
        "name": "p",
        "url": "..\/p\/career-support\/sep5-resume\/",
        "technology": "career-support",
        "difficulty": null,
        "category": "career-support",
        "folder-name": "sep5-resume"
    },
    {
        "translations": [
            "us"
        ],
        "readme": "..\/p\/final-project\/full-stack\/full-stack-demo-day-preparation\/",
        "markdown": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32) Demo Day Presentation\n\nYour final presentation day marks the beginning of your coding career. Everything has to be perfect :smile:\n\nThe academy makes a great effort in giving you a great platform to shine:\n\n- Invite your family to support you, there will be seats and refreshments for them to feel more comfortable.\n- Be aware that some of our hiring partners could attend to the presentations looking for devs.\n- Dress casual and remember we will be taking pictures.\n- Presentations are recorded, published on the website and sent to our media partners.\n- Finish a polished out version of your final project, make it look amazing!\n- Your entire presentation should not be longer than 15 minutes.\n- Students from recently started cohorts will also be attending.\n\n\n## Instructions\n\n- Create your google slides presentation [based on this one](https:\/\/docs.google.com\/presentation\/d\/1oqRlXWC3rpC2mMGP5guac0rzEuEvBhDkf2aJdWG098s\/edit#slide=id.p) but make it your own, change the design, add\/remove slides, etc. But try to go over the same topics as the original presentation suggests.\n- Prepare a 5 min live demonstration using the final project, make sure you won't encounter any bugs on that particular presentation flow, we will not allow video demonstrations.\n",
        "title": "Demo Day Preparation for Full-Stack Software Development",
        "visibility": "internal",
        "slug": "full-stack-demo-day-preparation",
        "status": "published",
        "duration": 20,
        "description": "Final presentation for the Full-stack Software Development Course",
        "talents": [
            {
                "badge": "docu-lover",
                "points": 5
            }
        ],
        "info-path": "..\/p\/final-project\/full-stack\/full-stack-demo-day-preparation\/info.json",
        "name": "p",
        "url": "..\/p\/final-project\/full-stack\/full-stack-demo-day-preparation\/",
        "technology": "final-project",
        "difficulty": "full-stack",
        "category": "final-project",
        "folder-name": "full-stack-demo-day-preparation"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/final-project\/full-stack\/full-stack-mvc\/",
        "markdown": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Making the Prototipe Dynamic\n\nNow that you are aware of Flux it is time to apply it into your project, that way you will practice more and more until you master it.\n\nYou already the project prototipes in HTML and CSS using Bootstrap.\n\n## Instructions:\n\nCreate a centralized MyStore.js and MyActions.js and start coding all your user stories using Flux.\n\n## Workflow:\n\n##### 1) Read your entire list of User Stories and prioritize to start working with  the simple ones first.\n\n##### 2) A great way to begin is to hard-code your store state with fake data and doin all the 'getter' function's first so that you views are able to retreive whatever they need.\n\n##### Steps to hard-core the store with fake data and make the getters:\n\n2.1) Initilize the variable in the store constructor:\n    \n```js\n        \/\/ this is an example of a fake store ideal for an eCommerce website hard-coded with a bunch of fake products\n        class MyStore extends Flux.Store{\n            constructor(){\n                super();\n                this.state = {\n                    'products': [\n                        \/\/ ..a bunch of fake products here...\n                        { id: 1, title: 'Amazing T-shirt', color: 'read'},\n                        { id: 1, title: 'Amazing T-shirt 2', color: 'blue'},\n                        { id: 1, title: 'Amazing T-shirt 3', color: 'green'}\n                    ],\n                }\n            }\n        }\n```\n2.2) Add the getter:\n```js\n        \/\/ this is an example of a fake store ideal for an eCommerce website hard-coded with a bunch of fake products\n        class MyStore extends Flux.Store{\n            ...\n            getProducts(){\n                return this.state.products;\n            }\n            ...\n        }\n        export default new MyStore();\n```\n\n2.3) Now you can change all your views and make them reander the products from the store.\n\n```js\nclass AnyView extends Flux.View{\n    constructor(){\n        super();\n        \/\/initialize the local state\n        this.state = {\n            products: []\n        }\n    }\n    ...\n    componentDidMount(){\n        \/\/ you have to re-set the state after the component has been loaded.\n        this.setState({\n            products: MyStore.getProducts()\n        });\n    }\n    ...\n    render(){\n        \/\/ convert the array of products into an array of <Product> components\n        let productsInHTML = this.state.products.map((p) => <Product id={p.id} title={p.title} \/>));\n        \n        \/\/ render the entire array of <Products>\n        return (\n            <div>{productsInHTML}<\/div>\n        );\n    }\n}\n\n```\n##### 3. After your views are able to properly render from the store, proceed to code the \"add\" or \"delete\" functionalities.\n\nFor Example: If you are doing an Online Store (eCommerce) card you can do the 'delete product' and 'add product' first, and leave the edit product for later.\n\n```js\n\/\/ Let's say we are doind the delete, on the html you have to add the listener to the DOM element that will trigger the delete\n<button onClick={() => MyActions.deleteProduct(productId)}>delete product<\/button>\n\n\/\/ On MyActions.js you have to add the deleteProduct function\nclass MyActions extends Flux.Action{\n    deleteProduct(productId){\n        \/\/delete your product here\n        \n        \/\/and dispatch later\n        this.dispatch('MyStore.setProducts', arrayWithProducts);\n    }\n}\n```\nNote: For each user story in your project it is probable that you will have to create a function instide MyActions.js\n\n##### 4. Finish by binding the views with the stores to listen to the store changes.\n",
        "markdown-es": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Making the Prototipe Dynamic\n\nAhora que est\u00e1 al tanto de Flux, es hora de aplicarlo en su proyecto, de esa manera practicar\u00e1 m\u00e1s y m\u00e1s hasta que lo domine.\n\nYa tienes los prototipos de proyecto en HTML y CSS usando Bootstrap.\n\n## Instrucciones:\n\nCree un MyStore.js y MyActions.js centralizados y comience a codificar todas sus historias de usuario utilizando Flux.\n\n## Flujo de trabajo:\n\n##### 1) Lea su lista completa de Historias de usuarios y establezca prioridades para comenzar a trabajar con las simples primero.\n\n##### 2) Una excelente manera de comenzar es codificar el estado de su tienda con datos falsos y hacer la primera funci\u00f3n 'getter' para que sus vistas puedan recuperar lo que necesiten.\n\n##### Pasos para endurecer la tienda con datos falsos y hacer que los captadores:\n\n2.1) Inicialice la variable en el constructor de tienda:\n    \n```js\n        \/\/ this is an example of a fake store ideal for an eCommerce website hard-coded with a bunch of fake products\n        class MyStore extends Flux.Store{\n            constructor(){\n                super();\n                this.state = {\n                    'products': [\n                        \/\/ ..a bunch of fake products here...\n                        { id: 1, title: 'Amazing T-shirt', color: 'read'},\n                        { id: 1, title: 'Amazing T-shirt 2', color: 'blue'},\n                        { id: 1, title: 'Amazing T-shirt 3', color: 'green'}\n                    ],\n                }\n            }\n        }\n```\n2.2) A\u00f1adir el getter:\n```js\n        \/\/ this is an example of a fake store ideal for an eCommerce website hard-coded with a bunch of fake products\n        class MyStore extends Flux.Store{\n            ...\n            getProducts(){\n                return this.state.products;\n            }\n            ...\n        }\n        export default new MyStore();\n```\n\n2.3) Ahora puede cambiar todas sus vistas y hacer que reanuden los productos de la tienda.\n\n```js\nclass AnyView extends Flux.View{\n    constructor(){\n        super();\n        \/\/initialize the local state\n        this.state = {\n            products: []\n        }\n    }\n    ...\n    componentDidMount(){\n        \/\/ you have to re-set the state after the component has been loaded.\n        this.setState({\n            products: MyStore.getProducts()\n        });\n    }\n    ...\n    render(){\n        \/\/ convert the array of products into an array of <Product> components\n        let productsInHTML = this.state.products.map((p) => <Product id={p.id} title={p.title} \/>));\n        \n        \/\/ render the entire array of <Products>\n        return (\n            <div>{productsInHTML}<\/div>\n        );\n    }\n}\n\n```\n##### 3. Una vez que sus vistas sean capaces de representar correctamente desde la tienda, proceda a codificar las funcionalidades \"agregar\" o \"eliminar\".\n\nPor ejemplo: si est\u00e1 haciendo una tarjeta de la tienda en l\u00ednea (comercio electr\u00f3nico), puede hacer primero 'eliminar producto' y 'agregar producto', y dejar el producto de edici\u00f3n para m\u00e1s adelante.\n\n```js\n\/\/ Let's say we are doind the delete, on the html you have to add the listener to the DOM element that will trigger the delete\n<button onClick={() => MyActions.deleteProduct(productId)}>delete product<\/button>\n\n\/\/ On MyActions.js you have to add the deleteProduct function\nclass MyActions extends Flux.Action{\n    deleteProduct(productId){\n        \/\/delete your product here\n        \n        \/\/and dispatch later\n        this.dispatch('MyStore.setProducts', arrayWithProducts);\n    }\n}\n```\nNota: Para cada historia de usuario en su proyecto, es probable que tenga que crear una funci\u00f3n en MyActions.js\n\n##### 4. Finalice enlazando las vistas con las tiendas para escuchar los cambios de la tienda.\n",
        "title": "Use MVC to make your Project Dynamic",
        "slug": "full-stack-project-mvc",
        "visibility": "internal",
        "status": "published",
        "duration": 20,
        "description": "Making the prototipe dynamic using MVC",
        "talents": [
            {
                "badge": "docu-lover",
                "points": 5
            }
        ],
        "info-path": "..\/p\/final-project\/full-stack\/full-stack-mvc\/info.json",
        "name": "p",
        "url": "..\/p\/final-project\/full-stack\/full-stack-mvc\/",
        "technology": "final-project",
        "difficulty": "full-stack",
        "category": "final-project",
        "folder-name": "full-stack-mvc"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/final-project\/full-stack\/full-stack-project-prototype\/",
        "markdown": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Creating the Prototype\n\nThe best way to experiment how your product will be used, is actually using it. Right? :)\n\nLets build a prototipe by coding our most important pages using CSS, HTML, Bootstrap and React Components.\n\n## Steps\n1. Focus only on your ~3 most important pages\n2. Build your HTML and CSS based on the Wireframe\n3. Once the HTML is finished, move everything to React.js components\n4. Connect your components using React Router.\n5. Create a repository and upload everything to it.",
        "markdown-es": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Creating the Prototype\n\nLa mejor manera de experimentar c\u00f3mo se usar\u00e1 su producto, en realidad es usarlo. \u00bfNo? :)\n\nConstruyamos un prototipo codificando nuestras p\u00e1ginas m\u00e1s importantes utilizando CSS, HTML, Bootstrap y React Components.\n\n## Pasos\n1. Enf\u00f3cate solo en tus ~ 3 p\u00e1ginas m\u00e1s importantes\n2. Construye tu HTML y CSS basado en el Wireframe\n3. Una vez que se termina el HTML, mueva todo a los componentes de React.js\n4. Conecte sus componentes utilizando React Router.\n5. Crea un repositorio y c\u00e1rgalo todo.",
        "title": "First Prototype",
        "slug": "full-stack-project-prototype",
        "visibility": "internal",
        "status": "published",
        "duration": 20,
        "description": "Create the product prototype",
        "talents": [
            {
                "badge": "docu-lover",
                "points": 5
            }
        ],
        "info-path": "..\/p\/final-project\/full-stack\/full-stack-project-prototype\/info.json",
        "name": "p",
        "url": "..\/p\/final-project\/full-stack\/full-stack-project-prototype\/",
        "technology": "final-project",
        "difficulty": "full-stack",
        "category": "final-project",
        "folder-name": "full-stack-project-prototype"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/final-project\/full-stack\/full-stack-project-stories-and-wireframes\/",
        "markdown": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Full-Stack Final Project\n\nIt's time to thing about what you are going to be building, you'll have to develop an entire product, prepare a presentation & demonstrate the product and the idea to family, friends and hiring partners.\n\nThis project should be started after you have the class about Agile Development because you will have to create User Stories and a Kanban Board.\n\n## Instrutions\n\n1. Create the project repository (one for front-end and one for backend): The front-end code shout never be merged with the backend.\n2. Add all your user stories into the front-end [repository issues](https:\/\/help.github.com\/en\/articles\/about-issues) as it will be the main repository for your project specs.\n3. Please create a [Github Kanban Automated Project](https:\/\/help.github.com\/en\/articles\/about-project-boards) with the KANBAN columns: Backlog, Todo, Doing, Done.\n4. Now add the issues into the project as cards, plan for your first iteration.\n\n\n### Technological Requirements for the project:\n\n1. Several HTML5 + CSS3 + Bootstrap pages.\n2. User authentication (Login+Signup+Remind Password).\n3. Custom made API with OAuth.\n4. 3rd party API integration (embeds and iframes don\u2019t count), it has to be a back-end integration.\n5. React.js application using Flux and React Router.\n6. Anything else the student wants to add.\n\n### Methodology Requirements\n\n1. The project must have between 2 - 3 team members (3 is better than 2)\n2. Start by doing the wireframes and user stories and add them into your repository issues and projects (you have to deliver them).\n3. Create all the user stories with acceptance criteria.\n4. Use a Kanban board for follow up on [Github Project Boards](https:\/\/help.github.com\/articles\/about-project-boards\/)\n\n# Building the Wireframe\n\nA great way to polish your user stories is to draft of all your application wireframes.\n\nPlease create all the wireframes for your [application's MVP](https:\/\/www.youtube.com\/watch?v=joNKkWPafZs).\n\n## Steps\n- Start by building a sitemap\n- Then do the wireframe of your home page.\n- Continue drawing the most important pages.\n- Everytime you draw a page, ideantify and highlite the re-usable parts to convert them into components.\n- Try to re-use everything all the time. The less code, the better!\n- Keep it simple!\n\n# [BE LEAN!](https:\/\/www.youtube.com\/watch?v=jBlrLqsjIDw)\n# [Like Really LEAN!](https:\/\/www.youtube.com\/watch?v=X2YoHFuWkqs)\n\n\n",
        "markdown-es": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Full-Stack Final Project\n\nEs hora de pensar en lo que va a construir, tendr\u00e1s que desarrollar un producto completo, preparar una presentaci\u00f3n y demostrar el producto y la idea a familiares, amigos y socios contratantes.\n\n## Instrucciones\n\n1. Por favor, crea una tabla trello con las columnas KANBAN: Backlog, Todo, Haciendo, Hecho, Realmente hecho\n2. Agrega todas tus historias de usuario en tu tablero de trello.\n\n### Requerimientos Tecnol\u00f3gicos:\n\n1. Varias p\u00e1ginas de HTML5 + CSS3 + Bootstrap.\n2. Autentificaci\u00f3n de usuario (Login + Registro + Recordar Contrase\u00f1a).\n3. API hecha a medida con OAuth.\n4. La integraci\u00f3n de API de terceros (las incrustaciones y los iframes no cuentan), tiene que ser una integraci\u00f3n de back-end.\n5. Aplicaci\u00f3n React.js usando Flux y React Router.\n6. Cualquier otra cosa que el estudiante quiera agregar.\n\n### Metodolog\u00eda de Requerimientos\n\n1. Asociarse con alguien m\u00e1s para el desarrollo (grupos de 2 personas).\n2. Empieza por hacer los wireframes (tienes que entregarlos).\n3. Crea todas las historias de usuario con criterios de aceptaci\u00f3n.\n4. Use un tablero Kanban para el seguimiento en [Tableros de proyectos Github](https:\/\/help.github.com\/articles\/about-project-boards\/)\n5. \n\n# Construyendo el Wireframe\n\nUna excelente manera de pulir sus historias de usuario es hacer un borrador de todos sus wireframes de aplicaci\u00f3n.\n\nCree todos los wireframes para su [MVP de la aplicaci\u00f3n](https:\/\/www.youtube.com\/watch?v=joNKkWPafZs).\n\n## PAsos\n- Empieza por construir un mapa del sitio.\n- A continuaci\u00f3n, haga el wireframe de su p\u00e1gina de inicio.\n- Contin\u00faa dibujando las p\u00e1ginas m\u00e1s importantes.\n- Cada vez que dibujes una p\u00e1gina, identifica y resalta las partes reutilizables para convertirlas en componentes.\n- Trata de reutilizar todo el tiempo. Cuanto menos c\u00f3digo, mejor!\n- \u00a1Mantenlo simple!\n\n# [BE LEAN!](https:\/\/www.youtube.com\/watch?v=jBlrLqsjIDw)\n# [Like Really LEAN!](https:\/\/www.youtube.com\/watch?v=X2YoHFuWkqs)\n\n\n",
        "preview": "..\/p\/final-project\/full-stack\/full-stack-project-stories-and-wireframes\/\/preview.png",
        "title": "Final Project User Stories & Wireframes",
        "slug": "full-stack-project-stories-and-wireframes",
        "status": "published",
        "visibility": "internal",
        "duration": 8,
        "description": "Create the users stories for your final project",
        "talents": [
            {
                "badge": "docu-lover",
                "points": 15
            }
        ],
        "info-path": "..\/p\/final-project\/full-stack\/full-stack-project-stories-and-wireframes\/info.json",
        "name": "p",
        "url": "..\/p\/final-project\/full-stack\/full-stack-project-stories-and-wireframes\/",
        "technology": "final-project",
        "difficulty": "full-stack",
        "category": "final-project",
        "folder-name": "full-stack-project-stories-and-wireframes"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/final-project\/web-development\/fluxify\/",
        "markdown": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Making the Prototipe Dynamic\n\nNow that you are aware of Flux it is time to apply it into your project, \nthat way you will practice more and more until you master it.\n\nYou already the project prototipes in HTML and CSS using Bootstrap.\n\n## Instructions:\n\nCreate a centralized MyStore.js and MyActions.js \nand start coding all your user stories using Flux.\n\n## Workflow:\n\n##### 1) Read your entire list of User Stories and prioritize to start working with  the simple ones first.\n\n##### 2) A great way to begin is to hard-code your store state with fake data and doin all the 'getter' function's first so that you views are able to retreive whatever they need.\n\n##### Steps to hard-core the store with fake data and make the getters:\n\n2.1) Initilize the variable in the store constructor:\n    \n```js\n        \/\/ this is an example of a fake store ideal for an eCommerce website hard-coded with a bunch of fake products\n        class MyStore extends Flux.Store{\n            constructor(){\n                super();\n                this.state = {\n                    'products': [\n                        \/\/ ..a bunch of fake products here...\n                        { id: 1, title: 'Amazing T-shirt', color: 'read'},\n                        { id: 1, title: 'Amazing T-shirt 2', color: 'blue'},\n                        { id: 1, title: 'Amazing T-shirt 3', color: 'green'}\n                    ],\n                }\n            }\n        }\n```\n2.2) Add the getter:\n```js\n        \/\/ this is an example of a fake store ideal for an eCommerce website hard-coded with a bunch of fake products\n        class MyStore extends Flux.Store{\n            ...\n            getProducts(){\n                return this.state.products;\n            }\n            ...\n        }\n        export default new MyStore();\n```\n\n2.3) Now you can change all your views and make them reander the products from the store.\n\n```js\nclass AnyView extends Flux.View{\n    constructor(){\n        super();\n        \/\/initialize the local state\n        this.state = {\n            products: []\n        }\n    }\n    ...\n    componentDidMount(){\n        \/\/ you have to re-set the state after the component has been loaded.\n        this.setState({\n            products: MyStore.getProducts()\n        });\n    }\n    ...\n    render(){\n        \/\/ convert the array of products into an array of <Product> components\n        let productsInHTML = this.state.products.map((p) => <Product id={p.id} title={p.title} \/>));\n        \n        \/\/ render the entire array of <Products>\n        return (\n            <div>{productsInHTML}<\/div>\n        );\n    }\n}\n\n```\n##### 3. After your views are able to properly render from the store, proceed to code the \"add\" or \"delete\" functionalities.\n\nFor Example: If you are doing an Online Store (eCommerce) card you can do the 'delete product' and 'add product' first, and leave the edit product for later.\n\n```js\n\/\/ Let's say we are doind the delete, on the html you have to add the listener to the DOM element that will trigger the delete\n<button onClick={() => MyActions.deleteProduct(productId)}>delete product<\/button>\n\n\/\/ On MyActions.js you have to add the deleteProduct function\nclass MyActions extends Flux.Action{\n    deleteProduct(productId){\n        \/\/delete your product here\n        \n        \/\/and dispatch later\n        this.dispatch('MyStore.setProducts', arrayWithProducts);\n    }\n}\n```\nNote: For each user story in your project it is probable that you will have to create a function instide MyActions.js\n\n##### 4. Finish by binding the views with the stores to listen to the store changes.\n",
        "markdown-es": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Haciendo el Prototipe Din\u00e1mico\n\nAhora que conoces Flux, es el momento de aplicarlo en tu proyecto.\nDe esa manera practicar\u00e1s m\u00e1s y m\u00e1s hasta que lo domines.\n\nYa tienes los prototipos de proyecto en HTML y CSS usando Bootstrap.\n\n## Instrucciones:\n\nCrea un MyStore.js centralizado y MyActions.js\ny comienza a codificar todas tus historias de usuario utilizando Flux.\n\n## Flujo de Trabajo:\n\n##### 1) Lea su lista completa de Historias de usuarios y establezca prioridades para comenzar a trabajar con las simples primero.\n\n##### 2) Una excelente manera de comenzar es codificar el estado de su tienda con datos falsos y hacer la primera funci\u00f3n 'getter' para que sus vistas puedan recuperar lo que necesiten.\n\n##### Pasos para codificar el store con data falsa y crear getter:\n\n2.1) Inicializa la variable en el store del constructor:\n\n```js\n        \/\/ Este es un ejemplo de una tienda falsa ideal para un sitio web de comercio electr\u00f3nico codificado con un mont\u00f3n de productos falsos.\n        class MyStore extends Flux.Store{\n            constructor(){\n                super();\n                this.state = {\n                    'products': [\n                        \/\/ ..a bunch of fake products here...\n                        { id: 1, title: 'Amazing T-shirt', color: 'read'},\n                        { id: 1, title: 'Amazing T-shirt 2', color: 'blue'},\n                        { id: 1, title: 'Amazing T-shirt 3', color: 'green'}\n                    ],\n                }\n            }\n        }\n```\n2.2) Agrega el getter:\n```js\n        \/\/ Este es un ejemplo de una tienda falsa ideal para un sitio web de comercio electr\u00f3nico codificado con un mont\u00f3n de productos falsos.\n        class MyStore extends Flux.Store{\n            ...\n            getProducts(){\n                return this.state.products;\n            }\n            ...\n        }\n        export default new MyStore();\n```\n\n2.3) Ahora puedes cambiar todas tus vistas y hacer que reanuden los productos del store.\n\n```js\nclass AnyView extends Flux.View{\n    constructor(){\n        super();\n        \/\/inicializa el local state\n        this.state = {\n            products: []\n        }\n    }\n    ...\n    componentDidMount(){\n        \/\/ debes restablecer el state despu\u00e9s de que se haya cargado el componente.\n        this.setState({\n            products: MyStore.getProducts()\n        });\n    }\n    ...\n    render(){\n        \/\/ convertir el arreglo de productos en un arreglo de componentes <Producto>\n        let productsInHTML = this.state.products.map((p) => <Product id={p.id} title={p.title} \/>));\n\n        \/\/ renderizar todo el arreglo de <Products>\n        return (\n            <div>{productsInHTML}<\/div>\n        );\n    }\n}\n\n```\n##### 3. Una vez que tus vistas sean capaces de presentarse correctamente desde el store, procede a codificar las funcionalidades \"agregar\" o \"eliminar\".\n\nPor ejemplo: si est\u00e1s haciendo un card de un Ecomerce (comercio electr\u00f3nico), puedes hacer primero 'eliminar producto' y 'agregar producto', y dejar el producto de edici\u00f3n para m\u00e1s adelante.\n\n```js\n\/\/ Digamos que estamos haciendo la eliminaci\u00f3n, en el html tiene que agregar el listener al elemento DOM que activar\u00e1 la eliminaci\u00f3n\n<button onClick={() => MyActions.deleteProduct(productId)}>delete product<\/button>\n\n\/\/ En MyActions.js tiene que agregar la funci\u00f3n deleteProduct\nclass MyActions extends Flux.Action{\n    deleteProduct(productId){\n        \/\/elimina tu producto aqui\n\n        \/\/and dispatch later\n        this.dispatch('MyStore.setProducts', arrayWithProducts);\n    }\n}\n```\nNota: Para cada historia de usuario en tu proyecto, es probable que tengas que crear una funci\u00f3n en MyActions.js\n\n##### 4. Finalice enlazando las vistas con el store para detectar los cambios del store.\n",
        "title": "First Prototype",
        "visibility": "internal",
        "slug": "web-development-project-fluxify",
        "status": "published",
        "duration": 20,
        "description": "Making the prototipe dynamic using Flux",
        "talents": [
            {
                "badge": "docu-lover",
                "points": 5
            }
        ],
        "info-path": "..\/p\/final-project\/web-development\/fluxify\/info.json",
        "name": "p",
        "url": "..\/p\/final-project\/web-development\/fluxify\/",
        "technology": "final-project",
        "difficulty": "web-development",
        "category": "final-project",
        "folder-name": "fluxify"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/final-project\/web-development\/prototype\/",
        "markdown": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Creating the Prototype\n\nThe best way to experiment how your product will be used, is actually using it. Right? :)\n\nLets build a prototipe by coding our most important pages using CSS, HTML, Bootstrap and React Components.\n\n## Steps\n1. Focus only on your ~3 most important pages\n2. Build your HTML and CSS based on the Wireframe\n3. Once the HTML is finished, move everything to React.js components\n4. Connect your components using React Router.\n5. Create a repository and upload everything to it.",
        "markdown-es": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Creando el Prototipo\n\nLa mejor forma de experimentar como tu producto va a ser usado, es realmente usandolo. no? :)\n\nConstruyamos un prototipo codificando nuestras p\u00e1ginas m\u00e1s importantes utilizando CSS, HTML, Bootstrap y React Components.\n\n## Pasos\n1. Concentrate solo en tus ~3 paginas m\u00e1s importante.\n2. Construye tu HTML y CSS basado en el Wireframe.\n3. Una vez el HTML este terminado, trasladato todo a componentes de React.js.\n4. Conecta tus componentes usando React Router.\n5. Crea un repositorio y carga todo en \u00e9l.",
        "title": "First Prototype",
        "visibility": "internal",
        "slug": "web-development-project-prototype",
        "status": "published",
        "duration": 20,
        "description": "Create the product prototype",
        "talents": [
            {
                "badge": "docu-lover",
                "points": 5
            }
        ],
        "info-path": "..\/p\/final-project\/web-development\/prototype\/info.json",
        "name": "p",
        "url": "..\/p\/final-project\/web-development\/prototype\/",
        "technology": "final-project",
        "difficulty": "web-development",
        "category": "final-project",
        "folder-name": "prototype"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/final-project\/web-development\/user-stories\/",
        "markdown": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Full-Stack Final Project\n\nIt's time to thing about what you are going to be building, you'll have to develop an entire product, prepare a presentation & demonstrate the product and the idea to family, friends and hiring partners.\n\n## Instrutions\n\n1. Please create a trello board with the KANBAN columns: Backlog, Todo, Doing, Done, Really done\n2. Add all your user stories into your trello boad.\n\n### Technological Requirements:\n\n1. Several HTML5 + CSS3 + Bootstrap pages.\n2. User authentication (Login+Signup+Remind Password).\n3. Custom made API with OAuth.\n4. 3rd party API integration (embeds and iframes don\u2019t count), it has to be a back-end integration.\n5. React.js application using Flux and React Router.\n6. Anything else the student wants to add.\n\n### Methodology Requirements\n\n1. Partner with someone else for the development (groups of 2 people).\n2. Start by doing the wireframes (you have to deliver them).\n3. Create all the user stories with acceptance criteria.\n4. Use a Kanban board for follow up on Trello.com\n\n\n",
        "markdown-es": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Proyecto Final Full-Stack\n\nEs hora de pensar en lo que vas a construir, tendr\u00e1s que desarrollar un producto completo, preparar una presentaci\u00f3n y demostrar el producto y la idea a familiares, amigos y socios contratantes.\n\n## Instrucciones\n\n1. Por favor, crea una tabla trello con las columnas KANBAN: Backlog, Por Hacer (ToDo), Haciendo, Hecho, Realmente hecho\n2. Agrega todas tus historias de usuario en tu tablero de trello.\n\n### Requeriemientos Tecnol\u00f3gicos:\n\n1. Varias p\u00e1ginas de HTML5 + CSS3 + Bootstrap.\n2. Autentificaci\u00f3n de usuario (Login + Registro + Recordar Contrase\u00f1a).\n3. API hecha a medida con OAuth.\n4. La integraci\u00f3n de API de terceros (las incrustaciones y los iframes no cuentan), tiene que ser una integraci\u00f3n de back-end.\n5. Aplicaci\u00f3n React.js usando Flux y React Router.\n6. Cualquier otra cosa que el estudiante quiera agregar.\n\n### Requerimientos en la Metodolog\u00eda:\n\n1. Asociarse con alguien m\u00e1s para el desarrollo (grupos de 2 o 3 personas).\n2. Empieza por hacer los wireframes (tienes que entregarlos).\n3. Crea todas las historias de usuario con criterios de aceptaci\u00f3n.\n4. Usa una tabla Kanban para el seguimiento en Trello.com\n\n\n",
        "title": "Final Project User Stories",
        "slug": "web-development-project-stories",
        "visibility": "internal",
        "status": "published",
        "duration": 8,
        "description": "Create the users stories for your final project",
        "talents": [
            {
                "badge": "docu-lover",
                "points": 5
            }
        ],
        "info-path": "..\/p\/final-project\/web-development\/user-stories\/info.json",
        "name": "p",
        "url": "..\/p\/final-project\/web-development\/user-stories\/",
        "technology": "final-project",
        "difficulty": "web-development",
        "category": "final-project",
        "folder-name": "user-stories"
    },
    {
        "translations": [
            "us",
            "es"
        ],
        "readme": "..\/p\/final-project\/web-development\/wireframes\/",
        "markdown": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Wireframing\n\nA great way to polish your user stories is to draft of all your application wireframes.\n\nPlease create all the wireframes for your [application's MVP](https:\/\/www.youtube.com\/watch?v=joNKkWPafZs).\n\n## Steps\n- Start by building a sitemap\n- Then do the wireframe of your home page.\n- Continue drawing the most important pages.\n- Everytime you draw a page, ideantify and highlite the re-usable parts to convert them into components.\n- Try to re-use everything all the time. The less code, the better!\n- Keep it simple!\n\n# [BE LEAN!](https:\/\/www.youtube.com\/watch?v=jBlrLqsjIDw)\n# [Like Really LEAN!](https:\/\/www.youtube.com\/watch?v=X2YoHFuWkqs)",
        "markdown-es": "# ![alt text](https:\/\/assets.breatheco.de\/apis\/img\/images.php?blob&random&cat=icon&tags=breathecode,32)  Wireframing\n\nUna excelente manera de pulir sus historias de usuario es hacer un borrador de todos sus wireframes de aplicaci\u00f3n.\n\nPlease create all the wireframes for your [application's MVP](https:\/\/www.youtube.com\/watch?v=joNKkWPafZs).\n\n## Steps\n- Start by building a sitemap\n- A continuaci\u00f3n, haga el wireframe de su p\u00e1gina de inicio.\n- Contin\u00faa dibujando las p\u00e1ginas m\u00e1s importantes.\n- Cada vez que dibujes una p\u00e1gina, identifica y resalta las partes reutilizables para convertirlas en componentes.\n- Trata de reutilizar todo el tiempo. Cuanto menos c\u00f3digo, mejor!\n- Mantenlo simple!\n\n# [BE LEAN!](https:\/\/www.youtube.com\/watch?v=jBlrLqsjIDw)\n# [Like Really LEAN!](https:\/\/www.youtube.com\/watch?v=X2YoHFuWkqs)",
        "title": "Final Project Wireframes",
        "slug": "web-development-project-wireframes",
        "visibility": "internal",
        "status": "published",
        "duration": 8,
        "description": "Create the wireframe stories for your final project",
        "talents": [
            {
                "badge": "docu-lover",
                "points": 5
            }
        ],
        "info-path": "..\/p\/final-project\/web-development\/wireframes\/info.json",
        "name": "p",
        "url": "..\/p\/final-project\/web-development\/wireframes\/",
        "technology": "final-project",
        "difficulty": "web-development",
        "category": "final-project",
        "folder-name": "wireframes"
    }
]